apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.movieService.deployment.name }}
  labels:
    app: {{ .Values.movieService.deployment.labels.app }}
spec:
  replicas: {{ .Values.movieService.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.movieService.deployment.labels.app }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{ .Values.movieService.deployment.labels.app }}
    spec:
      containers:
        - name: {{ .Values.movieService.deployment.container.name }}
          image: "{{ .Values.movieService.deployment.image.repository }}:{{ .Values.movieService.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.movieService.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.movieService.deployment.container.port }}
          env:
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.movieService.deployment.container.env.databaseUriSecret.name }}
                  key: {{ .Values.movieService.deployment.container.env.databaseUriSecret.key }}
            - name: CAST_SERVICE_HOST_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.movieService.deployment.container.env.castServiceUrlConfigMap.name }}
                  key: {{ .Values.movieService.deployment.container.env.castServiceUrlConfigMap.key }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.castService.deployment.name }}
  labels:
    app: {{ .Values.castService.deployment.labels.app }}
spec:
  replicas: {{ .Values.castService.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.castService.deployment.labels.app }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{ .Values.castService.deployment.labels.app }}
    spec:
      containers:
        - name: {{ .Values.castService.deployment.container.name }}
          image: "{{ .Values.castService.deployment.image.repository }}:{{ .Values.castService.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.castService.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.castService.deployment.container.port }}
          env:
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.castService.deployment.container.env.databaseUriSecret.name }}
                  key: {{ .Values.castService.deployment.container.env.databaseUriSecret.key }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nginx.deployment.name }}
spec:
  replicas: {{ .Values.nginx.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.nginx.deployment.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.nginx.deployment.labels.app }}
    spec:
      containers:
        - name: {{ .Values.nginx.deployment.container.name }}
          image: {{ .Values.nginx.deployment.image.repository }}:{{ .Values.nginx.deployment.image.tag }}
          ports:
            - containerPort: {{ .Values.nginx.deployment.container.port }}
          volumeMounts:
            - name: {{ .Values.nginx.deployment.container.volumeMount.name }}
              mountPath: {{ .Values.nginx.deployment.container.volumeMount.mountPath }}
              subPath: {{ .Values.nginx.deployment.container.volumeMount.subPath }}
      volumes:
        - name: {{ .Values.nginx.deployment.container.volume.name }}
          configMap:
            name: {{ .Values.nginx.deployment.container.volume.configMapName }}

